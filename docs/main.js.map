{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./demo/demo.module\": [\n\t\t\"./src/app/demo/demo.module.ts\",\n\t\t\"demo-demo-module~styleguide-styleguide-module\",\n\t\t\"demo-demo-module\"\n\t],\n\t\"./styleguide/styleguide.module\": [\n\t\t\"./src/app/styleguide/styleguide.module.ts\",\n\t\t\"demo-demo-module~styleguide-styleguide-module\",\n\t\t\"styleguide-styleguide-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router, NavigationEnd, NavigationStart } from '@angular/router';\n\nimport { StyleguideModule } from './styleguide/styleguide.module';\n\nconst routes: Routes = [\n  { path: 'styleguide', loadChildren: './styleguide/styleguide.module#StyleguideModule' },\n  { path: 'demo', loadChildren: './demo/demo.module#DemoModule' },\n\n  { path: '', pathMatch: 'full', redirectTo: 'styleguide' },\n  { path: '**', redirectTo: 'styleguide' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {useHash: true})\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule {\n  bodyNoAnimClass: string = 'u-no-animations';\n\n  constructor(router: Router) {\n\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        document.body.classList.add(this.bodyNoAnimClass);\n      }\n\n      if (event instanceof NavigationEnd) {\n        window.scroll(0, 0);\n\n        setTimeout(() => {\n          document.body.classList.remove(this.bodyNoAnimClass);\n        })\n      }\n    });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { PureElements } from 'pure-elements';\n\nimport { AppComponent } from './app.component';\n\nimport { BrandLogo } from './brand-logo/brand-logo';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    PureElements\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}